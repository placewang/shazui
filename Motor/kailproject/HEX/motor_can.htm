<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\HEX\motor_can.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\HEX\motor_can.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Fri Sep 23 18:12:57 2022
<BR><P>
<H3>Maximum Stack Usage =        216 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; DreMoveZero &rArr; YMoveZeroTrial &rArr; YMoveZero &rArr; MoveZero &rArr; MotorSendCanData &rArr; Send_CANFrame
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[4]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">NMI_Handler</a><BR>
 <LI><a href="#[5]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">HardFault_Handler</a><BR>
 <LI><a href="#[6]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SVC_Handler</a><BR>
 <LI><a href="#[7]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">PendSV_Handler</a><BR>
 <LI><a href="#[15]">ADC1_COMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15]">ADC1_COMP_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[15]">ADC1_COMP_IRQHandler</a> from startup_mm32spin06xx_s_keil.o(.text) referenced from startup_mm32spin06xx_s_keil.o(RESET)
 <LI><a href="#[22]">CAN_IRQHandler</a> from can.o(i.CAN_IRQHandler) referenced from startup_mm32spin06xx_s_keil.o(RESET)
 <LI><a href="#[12]">DMA1_Channel1_IRQHandler</a> from startup_mm32spin06xx_s_keil.o(.text) referenced from startup_mm32spin06xx_s_keil.o(RESET)
 <LI><a href="#[13]">DMA1_Channel2_3_IRQHandler</a> from startup_mm32spin06xx_s_keil.o(.text) referenced from startup_mm32spin06xx_s_keil.o(RESET)
 <LI><a href="#[14]">DMA1_Channel4_5_IRQHandler</a> from startup_mm32spin06xx_s_keil.o(.text) referenced from startup_mm32spin06xx_s_keil.o(RESET)
 <LI><a href="#[1]">DeQueue</a> from motorcan.o(i.DeQueue) referenced 2 times from motorcan.o(.data)
 <LI><a href="#[e]">EXTI0_1_IRQHandler</a> from startup_mm32spin06xx_s_keil.o(.text) referenced from startup_mm32spin06xx_s_keil.o(RESET)
 <LI><a href="#[f]">EXTI2_3_IRQHandler</a> from startup_mm32spin06xx_s_keil.o(.text) referenced from startup_mm32spin06xx_s_keil.o(RESET)
 <LI><a href="#[10]">EXTI4_15_IRQHandler</a> from startup_mm32spin06xx_s_keil.o(.text) referenced from startup_mm32spin06xx_s_keil.o(RESET)
 <LI><a href="#[2]">EnQueue</a> from motorcan.o(i.EnQueue) referenced 2 times from motorcan.o(.data)
 <LI><a href="#[c]">FLASH_IRQHandler</a> from startup_mm32spin06xx_s_keil.o(.text) referenced from startup_mm32spin06xx_s_keil.o(RESET)
 <LI><a href="#[11]">HWDIV_IRQHandler</a> from startup_mm32spin06xx_s_keil.o(.text) referenced from startup_mm32spin06xx_s_keil.o(RESET)
 <LI><a href="#[5]">HardFault_Handler</a> from startup_mm32spin06xx_s_keil.o(.text) referenced from startup_mm32spin06xx_s_keil.o(RESET)
 <LI><a href="#[1d]">I2C1_IRQHandler</a> from startup_mm32spin06xx_s_keil.o(.text) referenced from startup_mm32spin06xx_s_keil.o(RESET)
 <LI><a href="#[0]">MRevbuffLen</a> from motorcan.o(i.MRevbuffLen) referenced 2 times from motorcan.o(.data)
 <LI><a href="#[4]">NMI_Handler</a> from startup_mm32spin06xx_s_keil.o(.text) referenced from startup_mm32spin06xx_s_keil.o(RESET)
 <LI><a href="#[a]">PVD_IRQHandler</a> from startup_mm32spin06xx_s_keil.o(.text) referenced from startup_mm32spin06xx_s_keil.o(RESET)
 <LI><a href="#[7]">PendSV_Handler</a> from startup_mm32spin06xx_s_keil.o(.text) referenced from startup_mm32spin06xx_s_keil.o(RESET)
 <LI><a href="#[d]">RCC_CRS_IRQHandler</a> from startup_mm32spin06xx_s_keil.o(.text) referenced from startup_mm32spin06xx_s_keil.o(RESET)
 <LI><a href="#[b]">RTC_BKP_IRQHandler</a> from startup_mm32spin06xx_s_keil.o(.text) referenced from startup_mm32spin06xx_s_keil.o(RESET)
 <LI><a href="#[3]">Reset_Handler</a> from startup_mm32spin06xx_s_keil.o(.text) referenced from startup_mm32spin06xx_s_keil.o(RESET)
 <LI><a href="#[1e]">SPI1_IRQHandler</a> from startup_mm32spin06xx_s_keil.o(.text) referenced from startup_mm32spin06xx_s_keil.o(RESET)
 <LI><a href="#[1f]">SPI2_IRQHandler</a> from startup_mm32spin06xx_s_keil.o(.text) referenced from startup_mm32spin06xx_s_keil.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_mm32spin06xx_s_keil.o(.text) referenced from startup_mm32spin06xx_s_keil.o(RESET)
 <LI><a href="#[8]">SysTick_Handler</a> from delay.o(i.SysTick_Handler) referenced from startup_mm32spin06xx_s_keil.o(RESET)
 <LI><a href="#[24]">SystemInit</a> from system_mm32spin06xx_s.o(i.SystemInit) referenced from startup_mm32spin06xx_s_keil.o(.text)
 <LI><a href="#[1a]">TIM14_IRQHandler</a> from startup_mm32spin06xx_s_keil.o(.text) referenced from startup_mm32spin06xx_s_keil.o(RESET)
 <LI><a href="#[1b]">TIM16_IRQHandler</a> from startup_mm32spin06xx_s_keil.o(.text) referenced from startup_mm32spin06xx_s_keil.o(RESET)
 <LI><a href="#[1c]">TIM17_IRQHandler</a> from startup_mm32spin06xx_s_keil.o(.text) referenced from startup_mm32spin06xx_s_keil.o(RESET)
 <LI><a href="#[16]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from startup_mm32spin06xx_s_keil.o(.text) referenced from startup_mm32spin06xx_s_keil.o(RESET)
 <LI><a href="#[17]">TIM1_CC_IRQHandler</a> from startup_mm32spin06xx_s_keil.o(.text) referenced from startup_mm32spin06xx_s_keil.o(RESET)
 <LI><a href="#[18]">TIM2_IRQHandler</a> from tim3_pwm_input.o(i.TIM2_IRQHandler) referenced from startup_mm32spin06xx_s_keil.o(RESET)
 <LI><a href="#[19]">TIM3_IRQHandler</a> from tim3_pwm_input.o(i.TIM3_IRQHandler) referenced from startup_mm32spin06xx_s_keil.o(RESET)
 <LI><a href="#[20]">UART1_IRQHandler</a> from uart.o(i.UART1_IRQHandler) referenced from startup_mm32spin06xx_s_keil.o(RESET)
 <LI><a href="#[21]">UART2_IRQHandler</a> from startup_mm32spin06xx_s_keil.o(.text) referenced from startup_mm32spin06xx_s_keil.o(RESET)
 <LI><a href="#[9]">WWDG_IRQHandler</a> from startup_mm32spin06xx_s_keil.o(.text) referenced from startup_mm32spin06xx_s_keil.o(RESET)
 <LI><a href="#[25]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_mm32spin06xx_s_keil.o(.text)
 <LI><a href="#[23]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[25]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin06xx_s_keil.o(.text)
</UL>
<P><STRONG><a name="[97]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[26]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[33]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[98]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[99]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[9a]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[28]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_fini_ (Weak Reference)
</UL>

<P><STRONG><a name="[9b]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[9c]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[3]"></a>Reset_Handler</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, startup_mm32spin06xx_s_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin06xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32spin06xx_s_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin06xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32spin06xx_s_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin06xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32spin06xx_s_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin06xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mm32spin06xx_s_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin06xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>ADC1_COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin06xx_s_keil.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_COMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_COMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin06xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin06xx_s_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin06xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin06xx_s_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin06xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>DMA1_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin06xx_s_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin06xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin06xx_s_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin06xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin06xx_s_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin06xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin06xx_s_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin06xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin06xx_s_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin06xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>HWDIV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin06xx_s_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin06xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin06xx_s_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin06xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin06xx_s_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin06xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RCC_CRS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin06xx_s_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin06xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>RTC_BKP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin06xx_s_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin06xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin06xx_s_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin06xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin06xx_s_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin06xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin06xx_s_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin06xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin06xx_s_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin06xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin06xx_s_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin06xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin06xx_s_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin06xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin06xx_s_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin06xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin06xx_s_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin06xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mm32spin06xx_s_keil.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin06xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[9d]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[35]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSysClockFreq
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoCalPllFactor
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToXX
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_PWM_Input_Test
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_Init
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_AutoCfg_BaudParam
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MRevbuffLen
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MRevbuffFull
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnQueue
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeQueue
</UL>

<P><STRONG><a name="[2b]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[9e]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[9f]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2a]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Queue_init
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_pack
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorCanInit
</UL>

<P><STRONG><a name="[a0]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[a1]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2c]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[2d]"></a>__aeabi_ui2d</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestStep2
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestStep1
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KnifeSelection2
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseKnife2
</UL>

<P><STRONG><a name="[50]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestStep2
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestStep1
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KnifeSelection2
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseKnife2
</UL>

<P><STRONG><a name="[a2]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[32]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[2e]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
</UL>

<P><STRONG><a name="[27]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[a3]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[30]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[a4]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[31]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[a5]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[a6]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[a7]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[34]"></a>AutoCalPllFactor</STRONG> (Thumb, 106 bytes, Stack size 48 bytes, system_mm32spin06xx_s.o(i.AutoCalPllFactor))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = AutoCalPllFactor &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToXX
</UL>

<P><STRONG><a name="[36]"></a>CAN_AutoCfg_BaudParam</STRONG> (Thumb, 136 bytes, Stack size 48 bytes, hal_can.o(i.CAN_AutoCfg_BaudParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = CAN_AutoCfg_BaudParam &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Filter_20GroupInit
</UL>

<P><STRONG><a name="[49]"></a>CAN_ClearDataOverflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, hal_can.o(i.CAN_ClearDataOverflow))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_IRQHandler
</UL>

<P><STRONG><a name="[48]"></a>CAN_ClearITPendingBit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal_can.o(i.CAN_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_IRQHandler
</UL>

<P><STRONG><a name="[4b]"></a>CAN_FIFORelease</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, hal_can.o(i.CAN_FIFORelease))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Peli_Receive
</UL>

<P><STRONG><a name="[37]"></a>CAN_Filter0_19</STRONG> (Thumb, 422 bytes, Stack size 60 bytes, can.o(i.CAN_Filter0_19))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = CAN_Filter0_19
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCAN_FilterNum
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Filter_20GroupInit
</UL>

<P><STRONG><a name="[39]"></a>CAN_Filter_20GroupInit</STRONG> (Thumb, 128 bytes, Stack size 64 bytes, can.o(i.CAN_Filter_20GroupInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = CAN_Filter_20GroupInit &rArr; RCC_GetClocksFreq &rArr; RCC_GetPCLK2Freq &rArr; RCC_GetHCLKFreq &rArr; RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Filter0_19
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_GPIO_Config
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_ResetMode_Cmd
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Peli_StructInit
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Peli_Init
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Peli_ITConfig
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Mode_Cmd
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_AutoCfg_BaudParam
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[66]"></a>CAN_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, hal_can.o(i.CAN_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorSendCanData
</UL>

<P><STRONG><a name="[22]"></a>CAN_IRQHandler</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, can.o(i.CAN_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CAN_IRQHandler &rArr; CAN_Peli_Receive
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Peli_Receive
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Peli_ITConfig
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_ClearITPendingBit
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_ClearDataOverflow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin06xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>CAN_Mode_Cmd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal_can.o(i.CAN_Mode_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Filter_20GroupInit
</UL>

<P><STRONG><a name="[40]"></a>CAN_Peli_ITConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, hal_can.o(i.CAN_Peli_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_IRQHandler
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Filter_20GroupInit
</UL>

<P><STRONG><a name="[3f]"></a>CAN_Peli_Init</STRONG> (Thumb, 134 bytes, Stack size 0 bytes, hal_can.o(i.CAN_Peli_Init))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Filter_20GroupInit
</UL>

<P><STRONG><a name="[4a]"></a>CAN_Peli_Receive</STRONG> (Thumb, 200 bytes, Stack size 8 bytes, hal_can.o(i.CAN_Peli_Receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CAN_Peli_Receive
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_FIFORelease
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_IRQHandler
</UL>

<P><STRONG><a name="[3e]"></a>CAN_Peli_StructInit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, hal_can.o(i.CAN_Peli_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Filter_20GroupInit
</UL>

<P><STRONG><a name="[7d]"></a>CAN_Peli_Transmit</STRONG> (Thumb, 168 bytes, Stack size 0 bytes, hal_can.o(i.CAN_Peli_Transmit))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_CANFrame
</UL>

<P><STRONG><a name="[3b]"></a>CAN_ResetMode_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, hal_can.o(i.CAN_ResetMode_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Filter_20GroupInit
</UL>

<P><STRONG><a name="[68]"></a>ClearMStat</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, motormove.o(i.ClearMStat))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ClearMStat
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearM
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveZero
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveToTargetPos
</UL>

<P><STRONG><a name="[4c]"></a>CloseKnife2</STRONG> (Thumb, 674 bytes, Stack size 32 bytes, motorfeatureset.o(i.CloseKnife2))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = CloseKnife2 &rArr; MoveToTargetPos &rArr; MotorSendCanData &rArr; Send_CANFrame
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearM
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveToTargetPos
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveSeepMode
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableOrClearALarm
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[52]"></a>Cmd_pack</STRONG> (Thumb, 190 bytes, Stack size 8 bytes, uart.o(i.Cmd_pack))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Cmd_pack
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[53]"></a>DELAY_Init</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, delay.o(i.DELAY_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = DELAY_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[55]"></a>DataAnalyze</STRONG> (Thumb, 744 bytes, Stack size 8 bytes, motorcan.o(i.DataAnalyze))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = DataAnalyze &rArr; EnableOrClearALarm &rArr; MotorSendCanData &rArr; Send_CANFrame
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableOrClearALarm
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAnPackData
</UL>

<P><STRONG><a name="[1]"></a>DeQueue</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, motorcan.o(i.DeQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = DeQueue &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MRevbuffEmpty
</UL>
<BR>[Address Reference Count : 1]<UL><LI> motorcan.o(.data)
</UL>
<P><STRONG><a name="[57]"></a>DreMoveZero</STRONG> (Thumb, 600 bytes, Stack size 40 bytes, motorfeatureset.o(i.DreMoveZero))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = DreMoveZero &rArr; YMoveZeroTrial &rArr; YMoveZero &rArr; MoveZero &rArr; MotorSendCanData &rArr; Send_CANFrame
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YMoveZeroTrial
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YMoveZero
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScissorsReset
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearM
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestMotorSta
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveZero
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveToTargetPos
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MorotSetEncodervalue
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableOrClearALarm
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2]"></a>EnQueue</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, motorcan.o(i.EnQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = EnQueue &rArr; MRevbuffFull &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MRevbuffFull
</UL>
<BR>[Address Reference Count : 1]<UL><LI> motorcan.o(.data)
</UL>
<P><STRONG><a name="[4e]"></a>EnableOrClearALarm</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, motormove.o(i.EnableOrClearALarm))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = EnableOrClearALarm &rArr; MotorSendCanData &rArr; Send_CANFrame
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorSendCanData
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YMoveZeroTrial
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YMoveZero
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestStep3
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KnifeSelection2
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DreMoveZero
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseKnife2
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestMotorSta
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorCanInit
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataAnalyze
</UL>

<P><STRONG><a name="[45]"></a>GPIO_Init</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, hal_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_GPIO_Config
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_GPIO_Config
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_Init
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_ITRX_InIt
</UL>

<P><STRONG><a name="[46]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, hal_gpio.o(i.GPIO_PinAFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_GPIO_Config
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_GPIO_Config
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_ITRX_InIt
</UL>

<P><STRONG><a name="[83]"></a>GPIO_ReadOutputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, hal_gpio.o(i.GPIO_ReadOutputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[84]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hal_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[64]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hal_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
</UL>

<P><STRONG><a name="[44]"></a>GPIO_StructInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hal_gpio.o(i.GPIO_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_GPIO_Config
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_GPIO_Config
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_Init
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_ITRX_InIt
</UL>

<P><STRONG><a name="[38]"></a>GetCAN_FilterNum</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, can.o(i.GetCAN_FilterNum))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Filter0_19
</UL>

<P><STRONG><a name="[60]"></a>GetMotorSpeed_Torque_Pos</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, motorcan.o(i.GetMotorSpeed_Torque_Pos))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = GetMotorSpeed_Torque_Pos &rArr; MotorSendCanData &rArr; Send_CANFrame
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorSendCanData
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollingMotorSta
</UL>

<P><STRONG><a name="[61]"></a>Input_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, gpio.o(i.Input_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Input_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[62]"></a>KnifeSelection2</STRONG> (Thumb, 454 bytes, Stack size 32 bytes, motorfeatureset.o(i.KnifeSelection2))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = KnifeSelection2 &rArr; MoveToTargetPos &rArr; MotorSendCanData &rArr; Send_CANFrame
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clearM
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveToTargetPos
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveSeepMode
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableOrClearALarm
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[63]"></a>LED_Init</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, gpio.o(i.LED_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LED_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[56]"></a>MRevbuffEmpty</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, motorcan.o(i.MRevbuffEmpty))
<BR><BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeQueue
</UL>

<P><STRONG><a name="[5e]"></a>MRevbuffFull</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, motorcan.o(i.MRevbuffFull))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = MRevbuffFull &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnQueue
</UL>

<P><STRONG><a name="[0]"></a>MRevbuffLen</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, motorcan.o(i.MRevbuffLen))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = MRevbuffLen &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> motorcan.o(.data)
</UL>
<P><STRONG><a name="[5b]"></a>MorotSetEncodervalue</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, motormove.o(i.MorotSetEncodervalue))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = MorotSetEncodervalue &rArr; MotorSendCanData &rArr; Send_CANFrame
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorSendCanData
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DreMoveZero
</UL>

<P><STRONG><a name="[65]"></a>MotorCanInit</STRONG> (Thumb, 312 bytes, Stack size 24 bytes, motormove.o(i.MotorCanInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = MotorCanInit &rArr; EnableOrClearALarm &rArr; MotorSendCanData &rArr; Send_CANFrame
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableOrClearALarm
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorSendCanData
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5f]"></a>MotorSendCanData</STRONG> (Thumb, 114 bytes, Stack size 40 bytes, motorcan.o(i.MotorSendCanData))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = MotorSendCanData &rArr; Send_CANFrame
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_CANFrame
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveZero
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveToTargetPos
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveSeepMode
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorCanInit
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MorotSetEncodervalue
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableOrClearALarm
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMotorSpeed_Torque_Pos
</UL>

<P><STRONG><a name="[51]"></a>MoveSeepMode</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, motormove.o(i.MoveSeepMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = MoveSeepMode &rArr; MotorSendCanData &rArr; Send_CANFrame
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorSendCanData
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YMoveZeroTrial
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestStep2
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestStep1
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KnifeSelection2
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseKnife2
</UL>

<P><STRONG><a name="[4d]"></a>MoveToTargetPos</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, motormove.o(i.MoveToTargetPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = MoveToTargetPos &rArr; MotorSendCanData &rArr; Send_CANFrame
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearMStat
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorSendCanData
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestStep3
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestStep2
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestStep1
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KnifeSelection2
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DreMoveZero
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseKnife2
</UL>

<P><STRONG><a name="[59]"></a>MoveZero</STRONG> (Thumb, 256 bytes, Stack size 48 bytes, motormove.o(i.MoveZero))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = MoveZero &rArr; MotorSendCanData &rArr; Send_CANFrame
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearMStat
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorSendCanData
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YMoveZeroTrial
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YMoveZero
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DreMoveZero
</UL>

<P><STRONG><a name="[69]"></a>NVIC_Configure</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, tim3_pwm_input.o(i.NVIC_Configure))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = NVIC_Configure
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exNVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_PWM_Input_Test
</UL>

<P><STRONG><a name="[47]"></a>NVIC_Init</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, hal_misc.o(i.NVIC_Init))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_GPIO_Config
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_ITRX_InIt
</UL>

<P><STRONG><a name="[6b]"></a>PollingMotorSta</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, motorcan.o(i.PollingMotorSta))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = PollingMotorSta &rArr; GetMotorSpeed_Torque_Pos &rArr; MotorSendCanData &rArr; Send_CANFrame
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMotorSpeed_Torque_Pos
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6c]"></a>Queue_init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, uart.o(i.Queue_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Queue_init
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_ITRX_InIt
</UL>

<P><STRONG><a name="[43]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, hal_rcc.o(i.RCC_AHBPeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_GPIO_Config
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_GPIO_Config
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_Init
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_ITRX_InIt
</UL>

<P><STRONG><a name="[41]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, hal_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_GPIO_Config
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_PWM_Input_Init
</UL>

<P><STRONG><a name="[42]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, hal_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_GPIO_Config
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Config
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_ITRX_InIt
</UL>

<P><STRONG><a name="[3d]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, hal_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = RCC_GetClocksFreq &rArr; RCC_GetPCLK2Freq &rArr; RCC_GetHCLKFreq &rArr; RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSysClockFreq
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetPCLK2Freq
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetPCLK1Freq
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetHCLKFreq
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Filter_20GroupInit
</UL>

<P><STRONG><a name="[6e]"></a>RCC_GetHCLKFreq</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, hal_rcc.o(i.RCC_GetHCLKFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = RCC_GetHCLKFreq &rArr; RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetPCLK2Freq
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetPCLK1Freq
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>

<P><STRONG><a name="[6f]"></a>RCC_GetPCLK1Freq</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, hal_rcc.o(i.RCC_GetPCLK1Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = RCC_GetPCLK1Freq &rArr; RCC_GetHCLKFreq &rArr; RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>

<P><STRONG><a name="[70]"></a>RCC_GetPCLK2Freq</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, hal_rcc.o(i.RCC_GetPCLK2Freq))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = RCC_GetPCLK2Freq &rArr; RCC_GetHCLKFreq &rArr; RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetHCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>

<P><STRONG><a name="[6d]"></a>RCC_GetSysClockFreq</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, hal_rcc.o(i.RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetHCLKFreq
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>

<P><STRONG><a name="[71]"></a>ReadAnPackData</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, motorcan.o(i.ReadAnPackData))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = ReadAnPackData &rArr; DataAnalyze &rArr; EnableOrClearALarm &rArr; MotorSendCanData &rArr; Send_CANFrame
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataAnalyze
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5a]"></a>RestMotorSta</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, motormove.o(i.RestMotorSta))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = RestMotorSta &rArr; EnableOrClearALarm &rArr; MotorSendCanData &rArr; Send_CANFrame
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableOrClearALarm
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DreMoveZero
</UL>

<P><STRONG><a name="[72]"></a>RestStep1</STRONG> (Thumb, 292 bytes, Stack size 32 bytes, motorfeatureset.o(i.RestStep1))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = RestStep1 &rArr; MoveToTargetPos &rArr; MotorSendCanData &rArr; Send_CANFrame
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveToTargetPos
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveSeepMode
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScissorsReset
</UL>

<P><STRONG><a name="[73]"></a>RestStep2</STRONG> (Thumb, 382 bytes, Stack size 40 bytes, motorfeatureset.o(i.RestStep2))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = RestStep2 &rArr; MoveToTargetPos &rArr; MotorSendCanData &rArr; Send_CANFrame
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveToTargetPos
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveSeepMode
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScissorsReset
</UL>

<P><STRONG><a name="[74]"></a>RestStep3</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, motorfeatureset.o(i.RestStep3))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = RestStep3 &rArr; MoveToTargetPos &rArr; MotorSendCanData &rArr; Send_CANFrame
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveToTargetPos
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableOrClearALarm
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScissorsReset
</UL>

<P><STRONG><a name="[7c]"></a>SPI_1_32bit_Init</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, spi.o(i.SPI_1_32bit_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SPI_1_32bit_Init &rArr; SPI2_GPIO_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_GPIO_Config
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[78]"></a>SPI_BiDirectionalLineConfig</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, hal_spi.o(i.SPI_BiDirectionalLineConfig))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Config
</UL>

<P><STRONG><a name="[96]"></a>SPI_CSInternalSelected</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, hal_spi.o(i.SPI_CSInternalSelected))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25xx_CS_High
</UL>

<P><STRONG><a name="[79]"></a>SPI_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, hal_spi.o(i.SPI_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Config
</UL>

<P><STRONG><a name="[77]"></a>SPI_Init</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, hal_spi.o(i.SPI_Init))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Config
</UL>

<P><STRONG><a name="[76]"></a>SPI_StructInit</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, hal_spi.o(i.SPI_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_Config
</UL>

<P><STRONG><a name="[5d]"></a>ScissorsReset</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, motorfeatureset.o(i.ScissorsReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = ScissorsReset &rArr; RestStep2 &rArr; MoveToTargetPos &rArr; MotorSendCanData &rArr; Send_CANFrame
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestStep3
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestStep2
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestStep1
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DreMoveZero
</UL>

<P><STRONG><a name="[67]"></a>Send_CANFrame</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, can.o(i.Send_CANFrame))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Send_CANFrame
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Peli_Transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorSendCanData
</UL>

<P><STRONG><a name="[8]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, delay.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimingDelayDecrement
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin06xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>SystemInit</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, system_mm32spin06xx_s.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; SetSysClockToXX &rArr; AutoCalPllFactor &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin06xx_s_keil.o(.text)
</UL>
<P><STRONG><a name="[18]"></a>TIM2_IRQHandler</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, tim3_pwm_input.o(i.TIM2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM2_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin06xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TIM3_IRQHandler</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, tim3_pwm_input.o(i.TIM3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM3_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_GetFlagStatus
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin06xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>TIM3_PWM_Input_Init</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, tim3_pwm_input.o(i.TIM3_PWM_Input_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIM3_PWM_Input_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseStructInit
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearFlag
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ARRPreloadConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_PWM_Input_Test
</UL>

<P><STRONG><a name="[8c]"></a>TIM3_PWM_Input_Test</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, tim3_pwm_input.o(i.TIM3_PWM_Input_Test))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TIM3_PWM_Input_Test &rArr; TIM3_PWM_Input_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_PWM_Input_Init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configure
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[88]"></a>TIM_ARRPreloadConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, hal_tim.o(i.TIM_ARRPreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_PWM_Input_Init
</UL>

<P><STRONG><a name="[89]"></a>TIM_ClearFlag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal_tim.o(i.TIM_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_PWM_Input_Init
</UL>

<P><STRONG><a name="[82]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal_tim.o(i.TIM_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[8b]"></a>TIM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, hal_tim.o(i.TIM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_PWM_Input_Init
</UL>

<P><STRONG><a name="[81]"></a>TIM_GetITStatus</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, hal_tim.o(i.TIM_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[8a]"></a>TIM_ITConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hal_tim.o(i.TIM_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_PWM_Input_Init
</UL>

<P><STRONG><a name="[87]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, hal_tim.o(i.TIM_TimeBaseInit))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_PWM_Input_Init
</UL>

<P><STRONG><a name="[86]"></a>TIM_TimeBaseStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, hal_tim.o(i.TIM_TimeBaseStructInit))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_PWM_Input_Init
</UL>

<P><STRONG><a name="[20]"></a>UART1_IRQHandler</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, uart.o(i.UART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART1_IRQHandler &rArr; Cmd_pack
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReceiveData
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetITStatus
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetFlagStatus
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ClearITPendingBit
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cmd_pack
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mm32spin06xx_s_keil.o(RESET)
</UL>
<P><STRONG><a name="[91]"></a>UART1_ITRX_InIt</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, uart.o(i.UART1_ITRX_InIt))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = UART1_ITRX_InIt &rArr; UART_Init &rArr; RCC_GetPCLK2Freq &rArr; RCC_GetHCLKFreq &rArr; RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_StructInit
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ITConfig
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Cmd
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Queue_init
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8e]"></a>UART_ClearITPendingBit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hal_uart.o(i.UART_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[95]"></a>UART_Cmd</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal_uart.o(i.UART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_ITRX_InIt
</UL>

<P><STRONG><a name="[90]"></a>UART_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, hal_uart.o(i.UART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[8d]"></a>UART_GetITStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, hal_uart.o(i.UART_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[94]"></a>UART_ITConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hal_uart.o(i.UART_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_ITRX_InIt
</UL>

<P><STRONG><a name="[93]"></a>UART_Init</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, hal_uart.o(i.UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = UART_Init &rArr; RCC_GetPCLK2Freq &rArr; RCC_GetHCLKFreq &rArr; RCC_GetSysClockFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetPCLK2Freq
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetPCLK1Freq
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_ITRX_InIt
</UL>

<P><STRONG><a name="[8f]"></a>UART_ReceiveData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal_uart.o(i.UART_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[92]"></a>UART_StructInit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, hal_uart.o(i.UART_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_ITRX_InIt
</UL>

<P><STRONG><a name="[7b]"></a>W25xx_CS_High</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, spi.o(i.W25xx_CS_High))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = W25xx_CS_High
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_CSInternalSelected
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI2_GPIO_Config
</UL>

<P><STRONG><a name="[5c]"></a>YMoveZero</STRONG> (Thumb, 300 bytes, Stack size 24 bytes, motorfeatureset.o(i.YMoveZero))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = YMoveZero &rArr; MoveZero &rArr; MotorSendCanData &rArr; Send_CANFrame
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveZero
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableOrClearALarm
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YMoveZeroTrial
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DreMoveZero
</UL>

<P><STRONG><a name="[58]"></a>YMoveZeroTrial</STRONG> (Thumb, 352 bytes, Stack size 32 bytes, motorfeatureset.o(i.YMoveZeroTrial))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = YMoveZeroTrial &rArr; YMoveZero &rArr; MoveZero &rArr; MotorSendCanData &rArr; Send_CANFrame
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;YMoveZero
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveZero
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveSeepMode
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableOrClearALarm
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DreMoveZero
</UL>

<P><STRONG><a name="[2f]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[a8]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[a9]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[aa]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[4f]"></a>clearM</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, motormove.o(i.clearM))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = clearM &rArr; ClearMStat
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearMStat
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KnifeSelection2
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DreMoveZero
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseKnife2
</UL>

<P><STRONG><a name="[6a]"></a>exNVIC_Init</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, hal_misc.o(i.exNVIC_Init))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Configure
</UL>

<P><STRONG><a name="[23]"></a>main</STRONG> (Thumb, 322 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = main &rArr; DreMoveZero &rArr; YMoveZeroTrial &rArr; YMoveZero &rArr; MoveZero &rArr; MotorSendCanData &rArr; Send_CANFrame
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Filter_20GroupInit
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_1_32bit_Init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_PWM_Input_Test
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Input_Init
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_ITRX_InIt
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_Init
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KnifeSelection2
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DreMoveZero
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseKnife2
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorCanInit
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAnPackData
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PollingMotorSta
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[7e]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_mm32spin06xx_s.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = SetSysClock &rArr; SetSysClockToXX &rArr; AutoCalPllFactor &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockToXX
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[7f]"></a>SetSysClockToXX</STRONG> (Thumb, 368 bytes, Stack size 32 bytes, system_mm32spin06xx_s.o(i.SetSysClockToXX))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = SetSysClockToXX &rArr; AutoCalPllFactor &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoCalPllFactor
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[80]"></a>TimingDelayDecrement</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, delay.o(i.TimingDelayDecrement))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[54]"></a>__NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, delay.o(i.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_Init
</UL>

<P><STRONG><a name="[75]"></a>SPI2_Config</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, spi.o(i.SPI2_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SPI2_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_StructInit
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_BiDirectionalLineConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_1_32bit_Init
</UL>

<P><STRONG><a name="[7a]"></a>SPI2_GPIO_Config</STRONG> (Thumb, 166 bytes, Stack size 8 bytes, spi.o(i.SPI2_GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SPI2_GPIO_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25xx_CS_High
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_1_32bit_Init
</UL>

<P><STRONG><a name="[3a]"></a>CAN_GPIO_Config</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, can.o(i.CAN_GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CAN_GPIO_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_Filter_20GroupInit
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[29]"></a>__arm_fini_</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown_fini
</UL>
<HR></body></html>
